## Autogenerated by Scribe. DO NOT MODIFY.

name: Products
description: 'APIs for products'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: 'APIs for products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer secret'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: 'APIs for products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product. Must not be greater than 255 characters.'
        required: true
        example: 'Product name'
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: 'The description of the product.'
        required: false
        example: 'Product description'
        type: string
        enumValues: []
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: true
        example: 100
        type: string
        enumValues: []
        custom: []
      is_active:
        name: is_active
        description: 'The status of the product.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      cover_image:
        name: cover_image
        description: 'The Cover Image.'
        required: true
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: 'Product name'
      description: 'Product description'
      price: 100
      is_active: false
    fileParameters:
      cover_image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer secret'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: 'APIs for products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer secret'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: 'APIs for products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product. Must not be greater than 255 characters.'
        required: true
        example: 'Product name'
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: 'The description of the product.'
        required: false
        example: 'Product description'
        type: string
        enumValues: []
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: true
        example: 100
        type: string
        enumValues: []
        custom: []
      is_active:
        name: is_active
        description: 'The status of the product.'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover image of the product.'
        required: false
        example: 'https://example.com/image.jpg'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: 'Product name'
      description: 'Product description'
      price: 100
      is_active: false
      cover_image: 'https://example.com/image.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer secret'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: 'APIs for products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer secret'
    controller: null
    method: null
    route: null
    custom: []
